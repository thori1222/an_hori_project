#!/usr/bin/env python
PACKAGE = "cacc_communicator"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("thw", double_t, 0, "Time headway for reference distance", 1.8, 0.0, 3.0)
gen.add("tau", double_t, 0, "Time constant of vehicle model in 1st order", 0.10, 0.00, 5.00)
gen.add("K", double_t, 0, "Gain of vehicle model in 1st order", 1.00, 0.00, 2.00)
#gen.add("alpha", double_t, 0, "Time constant of vehicle model in 1st order delay", 0.90, 0.00, 1.00)
#gen.add("tau_acc0", double_t, 0, "Time constant of vehicle model in 1st order", 0.10, 0.00, 5.00)
#gen.add("K_acc0", double_t, 0, "Gain of vehicle model in 1st order", 1.00, 0.00, 2.00)
#gen.add("tau_acc10", double_t, 0, "Time constant of vehicle model in 1st order", 0.10, 0.00, 5.00)
#gen.add("K_acc10", double_t, 0, "Gain of vehicle model in 1st order", 1.00, 0.00, 2.00)
#gen.add("tau_dec10", double_t, 0, "Time constant of vehicle model in 1st order", 0.10, 0.00, 5.00)
#gen.add("K_dec10", double_t, 0, "Gain of vehicle model in 1st order", 1.00, 0.00, 2.00)
#gen.add("tau_dec20", double_t, 0, "Time constant of vehicle model in 1st order", 0.10, 0.00, 5.00)
#gen.add("K_dec20", double_t, 0, "Gain of vehicle model in 1st order", 1.00, 0.00, 2.00)
gen.add("vel_gain_low", int_t, 0, "Gain for calculating vel_ref in low speed", 50, 0, 200)
gen.add("vel_gain_dec", int_t, 0, "Gain for calculating vel_ref in decelerating", 100, 0, 600)
gen.add("vel_gain", int_t, 0, "Gain for calculating vel_ref in low speed", 10, 0, 200)

# thw_enum = gen.enum([ gen.const("Small", double_t, 0.5, "A small time headway"),
#                   gen.const("Medium", double_t, 0.7, "A medium time headway"),
#                   gen.const("Large", double_t, 1.2, "A large time headway"),
#                   gen.const("ExtraLarge", double_t, 1.8, "An extra large time headway") ],
#                   "An enum to set time headway")

# gen.add("thw_enum", double_t, 1.8, "A thw_enum parameter which is edited via an enum", 1.8, 0.5, 1.8, edit_method=thw_enum)

exit(gen.generate(PACKAGE, "car_param_configuration", "carParam"))
